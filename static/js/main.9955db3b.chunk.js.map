{"version":3,"sources":["Styles/assets/backdrop.jpg","Components/BDImageRender.js","Styles/assets/google_logo.svg","Components/Authentification.js","Components/FirstPageRow.js","App.js","reportWebVitals.js","index.js"],"names":["BDImageRender","className","style","justifyContent","marginTop","marginBottom","shadow","border","b","bg","p","x","borderColor","rounded","width","height","m","r","src","BDImage","d","lg","React","Authentification","props","handleInputChange","event","target","value","type","checked","name","setState","handleOnChange","email","password","test","console","log","additionalText","state","fontWeight","fontSize","h","w","textSize","textColor","hoverTextColor","bgc","hoverBg","hoverBorderColor","GoogleLogo","this","onChange","onClick","ContainerRow","App","FirstPageRow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9955db3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backdrop.55beb68d.jpg\";","import * as React from \"react\";\r\nimport { Container,Image } from \"atomize\";\r\nimport BDImage from \"../Styles/assets/backdrop.jpg\";\r\n\r\nclass BDImageRender extends React.Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div className=\"img-1\" style={{justifyContent: 'center', marginTop: '2rem', marginBottom: '2rem'}}>\r\n        <Container\r\n          shadow=\"3\"\r\n          border={{ b: \"5px solid\" }}\r\n          bg=\"white\"\r\n          p={{ b: \"5rem\", x: \"2rem\" }}\r\n          borderColor=\"gray400\"\r\n          rounded=\"xl\"\r\n        >\r\n          \r\n                <br />\r\n                <Image\r\n                  shadow=\"3\"\r\n                  width=\"80%\"\r\n                  height= '80%'\r\n                  border={{ b: \"3px solid\" }}\r\n                  borderColor=\"gray400\"\r\n                  m={{ r: \"2rem\" }}\r\n                  rounded=\"xl\"\r\n                  src={BDImage}\r\n                  d={{ lg: \"none\" }}\r\n                />\r\n              \r\n\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BDImageRender;\r\n","export default __webpack_public_path__ + \"static/media/google_logo.330a2dc7.svg\";","import * as React from \"react\";\r\nimport { Text, Container, Image } from \"atomize\";\r\nimport { Button } from \"atomize\";\r\nimport GoogleLogo from \"../Styles/assets/google_logo.svg\"\r\n\r\n\r\n\r\nclass Authentification extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          checked: false,\r\n          email: null,\r\n          password: null\r\n        }\r\n    \r\n    }\r\n    \r\n    handleInputChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleOnChange = (email, password) => {\r\n\r\n        var additionalText = null;\r\n     \r\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    \r\n        if( re.test(email)){\r\n            console.log(\"Email is correct\");\r\n            additionalText = \"Email is correct\";\r\n\r\n        } else if (email == \"\") {\r\n            console.log(\"Email Cannot Be Empty\");\r\n            additionalText = \"Email Cannot Be Empty\";\r\n\r\n\r\n        } else if (password == \"\"){\r\n            console.log(\"Password Cannot be Empty\");\r\n            additionalText = \"Password Cannot be Empty\";\r\n\r\n        } else if (password == \"\" && email == \"\"){\r\n            console.log(\"Email and Password Cannot Be Empty\");\r\n            additionalText = \"Email and Password Cannot Be Empty\";\r\n\r\n        } else{\r\n            console.log(\"Email is incorrect\");\r\n            additionalText = \"Email is incorrect\";\r\n\r\n        }\r\n        return(\r\n            <div>\r\n            {this.additionalText}\r\n            </div>\r\n           \r\n        )\r\n        \r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n        return (  \r\n        <div className=\"auth-comp\" >  \r\n          <Container\r\n            shadow=\"3\"\r\n            border={{ b: \"5px solid\" }}\r\n            borderColor=\"gray400\"\r\n            bg=\"white\" \r\n          > \r\n          \r\n          <Text className=\"SignInText\" style={{fontWeight: \"bold\"}}> Sign up to begin your adventure</Text>\r\n\r\n          <t style={{fontSize: \"small\"}}>Already a member? <t className=\"UnderlinedRed\">Login instead</t></t>\r\n          <Button className=\"ContinueButton\"\r\n            h=\"4rem\"\r\n            w=\"90%\"\r\n            height=\"10%\"\r\n            m={{ x: \"1.75rem\" }}\r\n            p={{ x: \"1.75rem\" }}\r\n            textSize=\"body\"\r\n            textColor=\"info700\"\r\n            hoverTextColor=\"info900\"\r\n            bgc=\"white\"\r\n            hoverBg=\"info200\"\r\n            border=\"1px solid\"\r\n            borderColor=\"info700\"\r\n            hoverBorderColor=\"info900\"\r\n            >\r\n                <Image\r\n                shadow=\"3\"\r\n                width=\"5%\"\r\n                justifyContent='center'\r\n                border={{ b: \"3px solid\" }}\r\n                borderColor=\"gray400\"\r\n                m={{ r: \"2rem\" }}\r\n                bg='white'\r\n                rounded=\"xl\"\r\n                src={GoogleLogo}\r\n                />\r\n\r\n                &nbsp;Continue with google\r\n            </Button>\r\n\r\n            <label className=\"OrSignUpText\">\r\n                <input className=\"OrSignUpText\"\r\n                type=\"checkbox\"\r\n                checked={this.state.checked}\r\n                onChange={this.handleInputChange} \r\n                />\r\n\r\n            or sign up with email\r\n            </label>\r\n\r\n        <Text>Email</Text>\r\n\r\n        <form>\r\n            <label>\r\n            <input type=\"email\" value={this.state.email} onChange={this.handleOnChange} />\r\n            </label>\r\n        </form>\r\n\r\n        <p>Password (min. 8 characters)</p>\r\n        <form>\r\n            <label>\r\n            <input type=\"text\" value={this.state.password} onChange={this.handleOnChange} />\r\n            </label>\r\n\r\n        </form>\r\n      \r\n        <form >\r\n            <label>\r\n            <input\r\n            type=\"checkbox\"\r\n            checked=\"false\"\r\n            onChange={this.handleInputChange} \r\n            />\r\n            <input type=\"checkbox\"></input>\r\n            \r\n            I agree to the <t className=\"UnderlinedRed\" >Terms of Service </t> and <t className=\"UnderlinedRed\">Privacy Policy</t>\r\n            </label>\r\n\r\n        </form>\r\n<       Button className=\"GetStartBTN\"\r\n        h=\"4rem\"\r\n        w=\"90%\"\r\n        width=\"100%\"\r\n        m={{ x: \"1.75rem\" }}\r\n        p={{ x: \"1.75rem\" }}\r\n        textSize=\"body\"\r\n        textColor=\"white\"\r\n        justifyContent='right'\r\n        hoverTextColor=\"info900\"\r\n        bg=\"#F63E34\"\r\n        hoverBg=\"info200\"\r\n        border=\"1px solid\"\r\n        borderColor=\"info700\"\r\n        onClick={this.handleOnChange(this.state.email, this.state.password)}\r\n        hoverBorderColor=\"info900\"\r\n        >\r\n        Get Started\r\n        </Button>\r\n\r\n<br></br>\r\n\r\n{this.additionalText}\r\n            \r\n          </Container>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\n}\r\n\r\n\r\nexport default Authentification;","import Authentification from './Authentification';\r\nimport BDImageRender  from './BDImageRender';\r\nimport { Row, Col, Container, Text, Image } from \"atomize\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction ContainerRow() {\r\n\r\n    return (\r\n        <Container>\r\n        <div className='rowC' >\r\n       \r\n       \r\n                <BDImageRender />\r\n                <Authentification />\r\n  \r\n        </div>\r\n        </Container>\r\n    );\r\n    }\r\n \r\n\r\n export default ContainerRow;","\n/*import './App.css';*/\nimport { BrowserRouter} from 'react-router-dom'\nimport Navbar from \"./Components/Navbar\"\nimport { Row, Col, Container, Text, Image } from \"atomize\";\nimport BDImageRender from \"./Components/BDImageRender\"\nimport AuthentificationComponent from \"./Components/Authentification\"\nimport FirstPageRow from \"./Components/FirstPageRow\"\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n     \n    </div>\n\n\n    \n            \n          \n\n  \n  <FirstPageRow style={{justifyContent: 'left'}}\n  />\n\n  \n</BrowserRouter>\n  \n\n  )  ;\n\n  \n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}